gerar_vetor <- function(a, b, c) {
accepted <- FALSE
while (!accepted) {
Yx <- rexp(1, rate = 1)
Yy <- rexp(1, rate = 1)
Yz <- rexp(1, rate = 1)
U <- runif(1)
razao <- exp(-(a * Yx * Yy + b * Yx * Yz + c * Yy * Yz))
if (U < razao) {
accepted <- TRUE
return(c(Yx, Yy, Yz))
}
}
}
# parâmetros
a <- 1
b <- 1
c <- 1
n <- 10000
matriz_simulacao <- matrix(NA, nrow = n, ncol = 3)
tentativas <- 0
# simulação
for (i in 1:n) {
tentativa_atual <- 0
aceito <- FALSE
while (!aceito) { #aq estava accepted_once
tentativa_atual <- tentativa_atual + 1
Yx_cand <- rexp(1, rate = 1)
Yy_cand <- rexp(1, rate = 1)
Yz_cand <- rexp(1, rate = 1)
U_cand <- runif(1)
val_razao <- exp(-(a * Yx_cand * Yy_cand + b * Yx_cand * Yz_cand + c * Yy_cand * Yz_cand))
if (U_cand < val_razao) {
matriz_simulacao[i, ] <- c(Yx_cand, Yy_cand, Yz_cand)
aceito <- TRUE
}
}
tentativas <- tentativas + tentativa_atual
}
amostraX <- matriz_simulacao[, 1]
amostraY <- matriz_simulacao[, 2]
amostraZ <- matriz_simulacao[, 3]
esperancaX <- mean(amostraX)
XYZ <- amostraX * amostraY * amostraZ
esperancaXYZ <- mean(XYZ)
erropX <- sd(amostraX)/sqrt(n)
erropXYZ <- sd(XYZ)/sqrt(n)
eficiencia <- n/tentativas
library(knitr)
resultados <- data.frame(
Medida = c("Número de amostras simuladas",
"Eficiência do método de Aceitação-Rejeição",
"Estimativa de E[X]",
"Erro Padrão de E[X]",
"Estimativa de E[XYZ]",
"Erro Padrão de E[XYZ]"),
Valor = c(n,
round(eficiencia, 4),
round(esperancaX, 4),
round(erropX, 4),
round(esperancaXYZ, 4),
round(erropXYZ, 4))
)
kable(resultados, caption = "Simulação Monte Carlo (a=b=c=1)")
resultados <- data.frame(
Medida = c("Número de amostras simuladas",
"Eficiência do método de Aceitação-Rejeição",
"Estimativa de E[X]",
"Erro Padrão de E[X]",
"Estimativa de E[XYZ]",
"Erro Padrão de E[XYZ]"),
Valor = c(n,
eficiencia,
esperancaX,
erropX,
esperancaXYZ,
erropXYZ)
)
kable(resultados, caption = "Simulação Monte Carlo (a=b=c=1)")
