# Para fins de simulação de Monte Carlo, a integral θ pode ser vista como a esperança de g(U), onde g(U)=e U e U∼Uniforme(0,1).
# Usamos k=100.000 réplicas para garantir uma boa aproximação.
set.seed(123)
# 1. Parâmetros da Simulação
k <- 100000 # Número de réplicas Monte Carlo
g <- function(x) {
# Função a ser integrada: e^x
return(exp(x))
}
# -----------------------------------------------
# 2. Método de Monte Carlo Simples (MC)
# -----------------------------------------------
# Geração de amostras U_i ~ Uniforme(0, 1) [2, 4]
U <- runif(k)
# Variáveis Monte Carlo (X_i = g(U_i))
X_mc <- g(U)
# Estimativa de theta: média amostral [5, 6]
theta_mc_hat <- mean(X_mc)
# Estimativa da Variância de Var[g(U)]
# Usamos var(X_mc) que calcula a variância amostral com denominador k-1
var_g_u_mc <- var(X_mc)
# Estimativa da Variância do Estimador MC: Var[theta_hat] = Var[g(U)] / k [7]
var_theta_mc_hat <- var_g_u_mc / k
# -----------------------------------------------
# 3. Método da Variável Antitética (AV)
# -----------------------------------------------
# A variável antitética é U_ant = 1 - U, que também é Uniforme(0, 1) [Baseado em conhecimento externo]
U_antithethic <- 1 - U
# Gerando as duas estimativas correlacionadas
X_ant_1 <- g(U)          # e^U
X_ant_2 <- g(U_antithethic) # e^(1-U)
# Variável antitética Y_i = (X_ant_1 + X_ant_2) / 2
Y_ant <- (X_ant_1 + X_ant_2) / 2
# Estimativa de theta: média amostral de Y_ant [6]
theta_ant_hat <- mean(Y_ant)
# Estimativa da Variância de Var[Y_ant]
var_Y_ant <- var(Y_ant)
# Estimativa da Variância do Estimador AV: Var[theta_ant_hat] = Var[Y_ant] / k [7]
var_theta_ant_hat <- var_Y_ant / k
# -----------------------------------------------
# 4. Cálculo da Redução Percentual na Variância
# -----------------------------------------------
# Redução percentual: (Var_MC - Var_ANT) / Var_MC * 100
reduction_pct <- ((var_theta_mc_hat - var_theta_ant_hat) / var_theta_mc_hat) * 100
# -----------------------------------------------
# 5. Apresentação dos Resultados
# -----------------------------------------------
theta_exact <- exp(1) - 1
resultado <- data.frame(
Quantidade = c("Valor exato (e - 1)",
"k (réplicas)",
"Estimativa MC (θ̂_MC)",
"Variância do estimador MC",
"SE do estimador MC",
"Estimativa Antitética (θ̂_ANT)",
"Variância do estimador Antitético",
"SE do estimador Antitético",
"Redução percentual na variância"),
Valor = c(
round(theta_exact, 7),
k,
round(theta_mc_hat, 7),
format(var_theta_mc_hat, scientific = TRUE, digits = 5),
format(se_theta_mc_hat, scientific = TRUE, digits = 5),
round(theta_ant_hat, 7),
format(var_theta_ant_hat, scientific = TRUE, digits = 5),
format(se_theta_ant_hat, scientific = TRUE, digits = 5),
paste0(round(reduction_pct, 4), " %")
),
stringsAsFactors = FALSE
)
set.seed(123)
# 1. Parâmetros da simulação
k <- 100000
g <- function(x) exp(x)
# 2. Monte Carlo simples
U <- runif(k)
X_mc <- g(U)
theta_mc_hat <- mean(X_mc)
var_theta_mc_hat <- var(X_mc) / k
se_theta_mc_hat <- sqrt(var_theta_mc_hat)
# 3. Variável antitética
U_ant <- 1 - U
Y_ant <- (g(U) + g(U_ant)) / 2
theta_ant_hat <- mean(Y_ant)
var_theta_ant_hat <- var(Y_ant) / k
se_theta_ant_hat <- sqrt(var_theta_ant_hat)
# 4. Redução percentual da variância
reduction_pct <- ((var_theta_mc_hat - var_theta_ant_hat) / var_theta_mc_hat) * 100
# 5. Valor exato
theta_exact <- exp(1) - 1
# 6. Resumo em data.frame
resultado <- data.frame(
Método = c("Monte Carlo", "Antitética"),
Estimativa = c(theta_mc_hat, theta_ant_hat),
Variância = c(var_theta_mc_hat, var_theta_ant_hat),
ErroPadrão = c(se_theta_mc_hat, se_theta_ant_hat)
)
print(resultado)
cat("\nValor exato:", round(theta_exact, 7),
"\nRedução percentual na variância:", round(reduction_pct, 4), "%\n")
library(kableExtra)
# parâmetros
set.seed(123456789)
k <- 100000
g <- function(x) exp(x)
# Monte Carlo simples
U_mc <- runif(k)
X_mc <- g(U_mc)
tc_mc <- mean(X_mc) # tc = theta chapéu
var_tc_mc <- var(X_mc) / k
ep_tc_mc <- sqrt(var_tc_mc)
# variável antitética
U_ant <- 1 - U_mc
Y_ant <- (g(U_mc) + g(U_ant)) / 2
tc_ant <- mean(Y_ant)
var_tc_ant <- var(Y_ant) / k
ep_tc_ant <- sqrt(var_tc_ant)
reducao <- ((var_tc_mc - var_tc_ant) / var_tc_mc) * 100 # em percentual
valor_exato <- exp(1) - 1
# 6. Resumo em data.frame
resultado <- data.frame(
Método = c("Monte Carlo", "Antitética"),
Estimativa = c(tc_mc, tc_ant),
Variância = c(var_tc_mc, var_tc_ant),
ErroPadrão = c(ep_tc_mc, ep_tc_ant)
)
kable(resultado)
cat("\nValor exato:", round(valor_exato, 7),
"\nRedução percentual na variância:", round(reducao, 4), "%\n")
